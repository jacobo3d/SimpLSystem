{
  "objectType" : "Graph",
  "metadata" : {
    "timeline_timerFps" : "1000",
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : 1.0006103515625,\n    \"y\" : -0.007470309268683195,\n    \"z\" : -0.02820475399494171,\n    \"t\" : 2.366311311721802\n    },\n  \"row1\" : {\n    \"x\" : -5.724709808418993e-06,\n    \"y\" : 0.9663894772529602,\n    \"z\" : -0.2567363679409027,\n    \"t\" : 0.06920080631971359\n    },\n  \"row2\" : {\n    \"x\" : 0.02918162383139134,\n    \"y\" : 0.256339430809021,\n    \"z\" : 0.9670639634132385,\n    \"t\" : 2.862480163574219\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "timeline_start" : "0",
    "timeline_loopMode" : "1",
    "uiGraphZoom" : "{\n  \"value\" : 0.9493171572685242\n  }",
    "timeline_simMode" : "0",
    "camera_focalDistance" : "3.625788927078247",
    "timeline_current" : "0",
    "timeline_end" : "200",
    "uiGraphPan" : "{\n  \"x\" : 353.8034057617188,\n  \"y\" : 243.7474517822266\n  }"
    },
  "title" : "",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "this",
      "execPortType" : "Out",
      "typeSpec" : "DrawingHandle"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "timeline",
      "execPortType" : "In",
      "typeSpec" : "Scalar"
      }
    ],
  "extDeps" : {},
  "nodes" : [
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":588.6129760742188,\"y\":-169.3612518310547}"
        },
      "name" : "EmptyDrawingHandle_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "handle"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle",
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-360.2497863769531,\"y\":-17.40006065368652}"
        },
      "name" : "SimpLPopulation_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.SimpLPopulation.SimpLPopulation",
      "presetGUID" : "D443419458D8009C80EFA110C04AC71A"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":46.93036270141602,\"y\":32.06740188598633}"
        },
      "name" : "Setup_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "FilePath" : "C:/Users/Jonah/development/fabric/extension_repos/SimpLSystem/Canvas/genetic/dfGenomes/plant.canvas"
            },
          "name" : "dfgPath"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "fitness"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 0.2000000029802322
            },
          "name" : "breederRate"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 0.5
            },
          "name" : "mutationRate"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 0.02999999932944775
            },
          "name" : "mutationAmount"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 0.02999999932944775
            },
          "name" : "insertionRate"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 0.02999999932944775
            },
          "name" : "deletionRate"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 0.01999999955296516
            },
          "name" : "crossoverRate"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.SimpLPopulation.Setup",
      "presetGUID" : "F0064C1AA188D9F6357C9C48325D6C27"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":265.9685974121094,\"y\":-79.97726440429688}"
        },
      "name" : "Iterate_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "reset"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Size" : 10
            },
          "name" : "populationSize"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Size" : 12
            },
          "name" : "maxIterations"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Size" : 10000
            },
          "name" : "desiredStringLength"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "population"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.SimpLPopulation.Iterate",
      "presetGUID" : "0F65428B680BD08A3FA33F8F0D503E9A"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":854.223388671875,\"y\":140.9716033935547}"
        },
      "name" : "DecomposeSimpLSpecimen_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "lines"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "leaves"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "evolved"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.SimpLSpecimen.DecomposeSimpLSpecimen",
      "presetGUID" : "F9FE6CC9AFFE53F728151D3080F133F4"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1566.181518554688,\"y\":82.8936767578125}"
        },
      "name" : "DrawColoredLines_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "exec"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "name"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "transform"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "lines"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "dummyResult"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "instance"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.DrawColoredLines",
      "presetGUID" : "A788963F833356D06CB02B5D47148843"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":713.3682250976563,\"y\":115.7800674438477}"
        },
      "name" : "Get_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "array"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "UInt32" : 0
            },
          "name" : "index"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "element"
          }
        ],
      "executable" : "Fabric.Core.Array.Get",
      "presetGUID" : "880D755392299678EEB93260424986E2"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-191.4227752685547,\"y\":156.8138885498047}"
        },
      "name" : "SimpLFitness_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "criteria"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.SimpLFitness.SimpLFitness",
      "presetGUID" : "1F8DC8F4AC3CB61B41310F6A43FB935E"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1226.732666015625,\"y\":179.1939849853516}"
        },
      "name" : "SimpLVertexColors_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "geometry"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Color" : {
              "r" : 0.3372549116611481,
              "g" : 0.3372549116611481,
              "b" : 0.3372549116611481,
              "a" : 1
              }
            },
          "name" : "baseColor"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Color" : {
              "r" : 0.05098039284348488,
              "g" : 0.05490196123719215,
              "b" : 0.1215686276555061,
              "a" : 1
              }
            },
          "name" : "attributeColor"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "String" : "stackDepth"
            },
          "name" : "scalarAttributeName"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "SimpLVertexColors",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "IO",
            "defaultValues" : {
              "Lines" : null
              },
            "name" : "geometry",
            "execPortType" : "IO",
            "typeSpec" : "$TYPE"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "defaultValues" : {
              "Color" : {
                "r" : 0.6784313917160034,
                "g" : 0,
                "b" : 0,
                "a" : 1
                }
              },
            "name" : "baseColor",
            "execPortType" : "In",
            "typeSpec" : "Color"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "defaultValues" : {
              "Color" : {
                "r" : 0.062745101749897,
                "g" : 0.07058823853731155,
                "b" : 0.1490196138620377,
                "a" : 1
                }
              },
            "name" : "attributeColor",
            "execPortType" : "In",
            "typeSpec" : "Color"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "defaultValues" : {
              "String" : ""
              },
            "name" : "scalarAttributeName",
            "execPortType" : "In",
            "typeSpec" : "String"
            }
          ],
        "extDeps" : {},
        "origPresetGUID" : "17BDA8B65609130F68F19AF1EFD65302",
        "code" : "
dfgEntry {
  if (geometry == null)
    return;
  Ref<ColorAttribute> vertexColors = geometry.attributes.getOrCreateColorAttribute(\"vertexColors\");
  if (scalarAttributeName == \"\")
    return;
  Ref<ScalarAttribute> attr = geometry.attributes.getAttribute(scalarAttributeName, ScalarAttribute);
  if (attr == null)
    return;
  for (Size i =0; i<attr.size(); i++) {
    vertexColors.values[i] = attributeColor * attr.values[i] + baseColor;
  }
}
"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":949.0,\"y\":446.0}"
        },
      "name" : "LinesTurtle_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "normalizeScale"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "attrNameBranchDepth"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "attrNameStackDepth"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "attrNameStringRatio"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.LinesTurtle.LinesTurtle",
      "presetGUID" : "5F55A0E09FA778C2187D39B69C11FF3D"
      },
    {
      "objectType" : "Var",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-153.2111053466797,\"y\":-18.04609489440918}"
        },
      "name" : "population",
      "ports" : [
        {
          "objectType" : "VarPort",
          "nodePortType" : "IO",
          "name" : "value"
          }
        ],
      "dataType" : "SimpLPopulation"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1055.275146484375,\"y\":181.2628173828125}"
        },
      "name" : "Clone_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "clonedValue"
          }
        ],
      "executable" : "Fabric.Core.Data.Clone",
      "presetGUID" : "30401D7851DEFCFA5C46EB3926DD8BAD"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":93.78252410888672,\"y\":-115.6017150878906}"
        },
      "name" : "Le_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "lhs"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 1
            },
          "name" : "rhs"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "Fabric.Core.Logic.Le",
      "presetGUID" : "29580C848A777A42608B45D8DF02D37C"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":542.26953125,\"y\":43.14154815673828}"
        },
      "name" : "Cache_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "value"
          }
        ],
      "executable" : "Fabric.Core.Data.Cache",
      "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-543.1990356445313,\"y\":97.07005310058594}"
        },
      "name" : "Push_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "array"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "element"
          }
        ],
      "executable" : "Fabric.Core.Array.Push",
      "presetGUID" : "572880BF96ACC34D6987BE3333715F52"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-744.9882202148438,\"y\":-24.9989013671875}"
        },
      "name" : "NullCriterion_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 1
            },
          "name" : "importance"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.NullCriterion.NullCriterion",
      "presetGUID" : "7F5640708D2FBE50E143B417D5D536B9"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-400.6108703613281,\"y\":154.45703125}"
        },
      "name" : "Push_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "array"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "element"
          }
        ],
      "executable" : "Fabric.Core.Array.Push",
      "presetGUID" : "572880BF96ACC34D6987BE3333715F52"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-660.9561157226563,\"y\":258.4432678222656}"
        },
      "name" : "StringLengthCriterion_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 0
            },
          "name" : "importance"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "lessIsBetter"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.StringLengthCriterion.StringLengthCriterion",
      "presetGUID" : "01A24080A9133171DCE53D16B6CCE04E"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-771.7733154296875,\"y\":70.96438598632813}"
        },
      "name" : "NumLinesCriterion_1",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 1
            },
          "name" : "importance"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "lessIsBetter"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          }
        ],
      "executable" : "ThirdParty.SimpLSystem.NumLinesCriterion.NumLinesCriterion",
      "presetGUID" : "7CFC0CA9ECF61A1829F7E60A19692264"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":1183.669921875,\"y\":-142.0915679931641}"
        },
      "name" : "DrawColoredLines_3",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "exec"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "IO",
          "name" : "this"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "String" : "test"
            },
          "name" : "name"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Vec3" : {
              "x" : 0.5,
              "y" : 0,
              "z" : 0
              }
            },
          "name" : "offset"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "specimens"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "dummyResult"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "instance"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Color" : {
              "r" : 0.529411792755127,
              "g" : 0,
              "b" : 0.007843137718737125,
              "a" : 1
              }
            },
          "name" : "baseColor"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "Color" : {
              "r" : 0.05882352963089943,
              "g" : 0.062745101749897,
              "b" : 0.07843137532472611,
              "a" : 1
              }
            },
          "name" : "attributeColor"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "defaultValues" : {
            "String" : "stackDepth"
            },
          "name" : "scalarAttributeName"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "metadata" : {
          "uiTooltip" : "helper function to draw a lines object given a single transform\n\nSupported types:\n  this: DrawingHandle\n  name: String\n  transform: Xfo\n  lines: Lines\n  dummyResult: Vec3\n  instance: InlineInstance\n"
          },
        "title" : "DrawColoredLines",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "IO",
            "name" : "exec",
            "execPortType" : "IO",
            "typeSpec" : "Execute"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "IO",
            "name" : "this",
            "execPortType" : "IO",
            "typeSpec" : "DrawingHandle"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "name",
            "execPortType" : "In",
            "typeSpec" : "String"
            },
          {
            "objectType" : "Port",
            "metadata" : {
              "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
              },
            "nodePortType" : "Out",
            "name" : "offset",
            "execPortType" : "In",
            "typeSpec" : "Vec3"
            },
          {
            "objectType" : "Port",
            "metadata" : {
              "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
              },
            "nodePortType" : "Out",
            "name" : "specimens",
            "execPortType" : "In",
            "typeSpec" : "SimpLSpecimen[]"
            },
          {
            "objectType" : "Port",
            "metadata" : {
              "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
              },
            "nodePortType" : "In",
            "name" : "dummyResult",
            "execPortType" : "Out",
            "typeSpec" : "Vec3"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "instance",
            "execPortType" : "Out",
            "typeSpec" : "InlineInstance"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "baseColor",
            "execPortType" : "In",
            "typeSpec" : "Color"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "attributeColor",
            "execPortType" : "In",
            "typeSpec" : "Color"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "scalarAttributeName",
            "execPortType" : "In",
            "typeSpec" : "String"
            }
          ],
        "extDeps" : {
          "InlineDrawing" : "*",
          "FabricInterfaces" : "*"
          },
        "origPresetGUID" : "A788963F833356D06CB02B5D47148843",
        "code" : "require InlineDrawing;

dfgEntry {
  for (Size i=0; i<specimens.size(); i++) {
    Lines lines = specimens[i].lines.clone();
    Ref<ColorAttribute> vertexColors = lines.attributes.getOrCreateColorAttribute(\"vertexColors\");
    if (scalarAttributeName == \"\")
      return;
    Ref<ScalarAttribute> attr = lines.attributes.getAttribute(scalarAttributeName, ScalarAttribute);
    if (attr == null)
      return;
    for (Size i =0; i<attr.size(); i++) {
      vertexColors.values[i] = attributeColor * attr.values[i] + baseColor;
    }
  
    this.drawColoredLines(name+\"_\"+i, Xfo(offset*i), lines, dummyResult, instance);
  }
}
"
        }
      }
    ],
  "connections" : {
    "timeline" : [
      "Le_1.lhs"
      ],
    "EmptyDrawingHandle_1.handle" : [
      "DrawColoredLines_2.this",
      "DrawColoredLines_3.this"
      ],
    "SimpLPopulation_1.result" : [
      "population.value"
      ],
    "Setup_2.this" : [
      "Iterate_1.this"
      ],
    "Iterate_1.population" : [
      "Cache_2.value"
      ],
    "DecomposeSimpLSpecimen_1.lines" : [
      "Clone_1.value"
      ],
    "Get_1.element" : [
      "DecomposeSimpLSpecimen_1.value"
      ],
    "SimpLFitness_1.result" : [
      "Setup_2.fitness"
      ],
    "SimpLVertexColors_1.geometry" : [
      "DrawColoredLines_2.lines"
      ],
    "population.value" : [
      "Setup_2.this"
      ],
    "Clone_1.clonedValue" : [
      "SimpLVertexColors_1.geometry"
      ],
    "Le_1.result" : [
      "Iterate_1.reset"
      ],
    "Cache_2.value" : [
      "Get_1.array",
      "DrawColoredLines_3.specimens"
      ],
    "Push_1.array" : [
      "Push_2.array",
      "SimpLFitness_1.criteria"
      ],
    "StringLengthCriterion_1.result" : [
      "Push_2.element"
      ],
    "NumLinesCriterion_1.result" : [
      "Push_1.element"
      ],
    "DrawColoredLines_3.this" : [
      "this"
      ]
    },
  "requiredPresets" : {
    "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle" : {
      "objectType" : "Graph",
      "title" : "EmptyDrawingHandle",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "handle",
          "execPortType" : "Out",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 894, \"y\": 100}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              }
            ],
          "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.Clear",
          "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
          "cacheRule" : "never"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\":567.0,\"y\":56.0}",
            "uiCollapsedState" : "0"
            },
          "name" : "handleVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "DrawingHandle",
          "extDep" : "InlineDrawing:*"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":287.0,\"y\":56.0}"
            },
          "name" : "CreateDrawingHandle",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "handle"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "Create DrawingHandle",
            "ports" : [
              {
                "objectType" : "Port",
                "nodePortType" : "In",
                "name" : "handle",
                "execPortType" : "Out",
                "typeSpec" : "DrawingHandle"
                }
              ],
            "extDeps" : {
              "InlineDrawing" : "*"
              },
            "code" : "dfgEntry {
  handle = DrawingHandle();
}
"
            }
          }
        ],
      "connections" : {
        "Clear.this" : [
          "handle"
          ],
        "handleVar.value" : [
          "Clear.this"
          ],
        "CreateDrawingHandle.handle" : [
          "handleVar.value"
          ]
        }
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.1.0/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "removes all contents from the DrawingHandle\n\n Supported by DrawingHandle"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
      "code" : "require InlineDrawing;

dfgEntry {
  this.clear();
}
"
      },
    "ThirdParty.SimpLSystem.SimpLPopulation.SimpLPopulation" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  result: SimpLPopulation\n"
        },
      "title" : "SimpLPopulation",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "SimpLPopulation"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "D443419458D8009C80EFA110C04AC71A",
      "code" : "require SimpLSystem;

dfgEntry {
  result = SimpLPopulation();
}
"
      },
    "ThirdParty.SimpLSystem.SimpLPopulation.Setup" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  this: SimpLPopulation\n  dfgPath: FilePath\n  fitness: SimpLFitness\n  breederRate: Scalar\n  mutationRate: Scalar\n  mutationAmount: Scalar\n  insertionRate: Scalar\n  deletionRate: Scalar\n  crossoverRate: Scalar\n"
        },
      "title" : "Setup",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "SimpLPopulation"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "dfgPath",
          "execPortType" : "In",
          "typeSpec" : "FilePath"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "fitness",
          "execPortType" : "In",
          "typeSpec" : "SimpLFitness"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "breederRate",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 0.2000000029802322
            },
          "name" : "mutationRate",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 0.009999999776482582
            },
          "name" : "mutationAmount",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 0.009999999776482582
            },
          "name" : "insertionRate",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 0.009999999776482582
            },
          "name" : "deletionRate",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 0.009999999776482582
            },
          "name" : "crossoverRate",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "F0064C1AA188D9F6357C9C48325D6C27",
      "code" : "require SimpLSystem;

dfgEntry {
  this.setup(dfgPath, fitness, breederRate, mutationRate, mutationAmount, insertionRate, deletionRate, crossoverRate);
}
"
      },
    "ThirdParty.SimpLSystem.SimpLPopulation.Iterate" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  this: SimpLPopulation\n  reset: Boolean\n  populationSize: Size\n  maxIterations: Size\n  desiredStringLength: Size\n  population: SimpLSpecimen[]\n"
        },
      "title" : "Iterate",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "SimpLPopulation"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "reset",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "populationSize",
          "execPortType" : "In",
          "typeSpec" : "Size"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "maxIterations",
          "execPortType" : "In",
          "typeSpec" : "Size"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "desiredStringLength",
          "execPortType" : "In",
          "typeSpec" : "Size"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "population",
          "execPortType" : "Out",
          "typeSpec" : "SimpLSpecimen[]"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "0F65428B680BD08A3FA33F8F0D503E9A",
      "code" : "require SimpLSystem;

dfgEntry {
  this.iterate(reset, populationSize, maxIterations, desiredStringLength, population);
}
"
      },
    "ThirdParty.SimpLSystem.SimpLSpecimen.DecomposeSimpLSpecimen" : {
      "objectType" : "Func",
      "title" : "SimpLSpecimen ->",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "SimpLSpecimen"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "In",
          "name" : "lines",
          "execPortType" : "Out",
          "typeSpec" : "Lines"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "In",
          "name" : "leaves",
          "execPortType" : "Out",
          "typeSpec" : "Xfo[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "evolved",
          "execPortType" : "Out",
          "typeSpec" : "String"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "F9FE6CC9AFFE53F728151D3080F133F4",
      "code" : "require SimpLSystem;

dfgEntry {
  lines = value.lines;
  leaves = value.leaves;
  evolved = value.evolved;
}
"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.DrawColoredLines" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "helper function to draw a lines object given a single transform\n\nSupported types:\n  this: DrawingHandle\n  name: String\n  transform: Xfo\n  lines: Lines\n  dummyResult: Vec3\n  instance: InlineInstance\n"
        },
      "title" : "DrawColoredLines",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "exec",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "name",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "transform",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "nodePortType" : "Out",
          "name" : "lines",
          "execPortType" : "In",
          "typeSpec" : "Lines"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "dummyResult",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "instance",
          "execPortType" : "Out",
          "typeSpec" : "InlineInstance"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*",
        "FabricInterfaces" : "*"
        },
      "presetGUID" : "A788963F833356D06CB02B5D47148843",
      "code" : "require InlineDrawing;

dfgEntry {
  this.drawColoredLines(name, transform, lines, dummyResult, instance);
}
"
      },
    "Fabric.Core.Array.Get" : {
      "objectType" : "Func",
      "title" : "Get[]",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "array",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "index",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "element",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "880D755392299678EEB93260424986E2",
      "code" : "
dfgEntry {
	element = array[index];
}
"
      },
    "ThirdParty.SimpLSystem.SimpLFitness.SimpLFitness" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  criteria: SimpLFitnessCriterion[]\n  result: SimpLFitness\n"
        },
      "title" : "SimpLFitness",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "criteria",
          "execPortType" : "In",
          "typeSpec" : "SimpLFitnessCriterion[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "SimpLFitness"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "1F8DC8F4AC3CB61B41310F6A43FB935E",
      "code" : "require SimpLSystem;

dfgEntry {
  result = SimpLFitness(criteria);
}
"
      },
    "ThirdParty.SimpLSystem.LinesTurtle.LinesTurtle" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  normalizeScale: Boolean\n  attrNameBranchDepth: String\n  attrNameStackDepth: String\n  attrNameStringRatio: String\n  result: LinesTurtle\n"
        },
      "title" : "LinesTurtle",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "normalizeScale",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "String" : "branchDepth"
            },
          "name" : "attrNameBranchDepth",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "String" : "stackDepth"
            },
          "name" : "attrNameStackDepth",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "String" : "stringRatio"
            },
          "name" : "attrNameStringRatio",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "LinesTurtle"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "5F55A0E09FA778C2187D39B69C11FF3D",
      "code" : "require SimpLSystem;

dfgEntry {
  result = LinesTurtle(normalizeScale, attrNameBranchDepth, attrNameStackDepth, attrNameStringRatio);
}
"
      },
    "Fabric.Core.Data.Clone" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Clone",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "clonedValue",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "30401D7851DEFCFA5C46EB3926DD8BAD",
      "code" : "dfgEntry {
  clonedValue = value.clone();
}
"
      },
    "Fabric.Core.Logic.Le" : {
      "objectType" : "Func",
      "title" : "Le <=",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "lhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "rhs",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Boolean"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "29580C848A777A42608B45D8DF02D37C",
      "code" : "
dfgEntry {
	result = lhs <= rhs;
}
"
      },
    "Fabric.Core.Data.Cache" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiAlwaysShowDaisyChainPorts" : "true",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Cache",
      "cacheRule" : "always",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "D903AFD981FE9214C69943F542D5FD60",
      "code" : "dfgEntry {
}
"
      },
    "Fabric.Core.Array.Push" : {
      "objectType" : "Func",
      "title" : "Push[]",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "array",
          "execPortType" : "IO",
          "typeSpec" : "$TYPE$[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "element",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "572880BF96ACC34D6987BE3333715F52",
      "code" : "
dfgEntry {
	array.push(element);
}
"
      },
    "ThirdParty.SimpLSystem.NullCriterion.NullCriterion" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  importance: Scalar\n  result: NullCriterion\n"
        },
      "title" : "NullCriterion",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "importance",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "NullCriterion"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "7F5640708D2FBE50E143B417D5D536B9",
      "code" : "require SimpLSystem;

dfgEntry {
  result = NullCriterion(importance);
}
"
      },
    "ThirdParty.SimpLSystem.StringLengthCriterion.StringLengthCriterion" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  importance: Scalar\n  lessIsBetter: Boolean\n  result: StringLengthCriterion\n"
        },
      "title" : "StringLengthCriterion",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "importance",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "lessIsBetter",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "StringLengthCriterion"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "01A24080A9133171DCE53D16B6CCE04E",
      "code" : "require SimpLSystem;

dfgEntry {
  result = StringLengthCriterion(importance, lessIsBetter);
}
"
      },
    "ThirdParty.SimpLSystem.NumLinesCriterion.NumLinesCriterion" : {
      "objectType" : "Func",
      "metadata" : {
        "uiTooltip" : "Supported types:\n  importance: Scalar\n  lessIsBetter: Boolean\n  result: NumLinesCriterion\n"
        },
      "title" : "NumLinesCriterion",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "importance",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "lessIsBetter",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "NumLinesCriterion"
          }
        ],
      "extDeps" : {
        "SimpLSystem" : "*"
        },
      "presetGUID" : "7CFC0CA9ECF61A1829F7E60A19692264",
      "code" : "require SimpLSystem;

dfgEntry {
  result = NumLinesCriterion(importance, lessIsBetter);
}
"
      }
    },
  "args" : [
    {
      "type" : "DrawingHandle",
      "value" : null,
      "ext" : "InlineDrawing"
      },
    {
      "type" : "Float32",
      "value" : null
      }
    ]
  }